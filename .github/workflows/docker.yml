name: Build and Deploy Docker Image

on:
  push:
    branches:
      - master  # Trigger the action when there's a push to the master branch
  pull_request:
    branches:
      - master  # Trigger for pull requests targeting the master branch

jobs:
  build:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Set up Docker Buildx for multi-platform support
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in to Docker Hub (uses GitHub Secrets to keep credentials safe)
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }} 
        password: ${{ secrets.DOCKERHUB_PASSWORD }} 

    # Build the Docker image using the Dockerfile
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/realtime-chat-backend:${{ github.sha }} .

    # Push the Docker image to Docker Hub (can be tagged with commit SHA)
    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/realtime-chat-backend:${{ github.sha }}

  deploy:
    needs: build  # This ensures the deploy job runs only after the build job completes successfully
    runs-on: ubuntu-latest

    steps:
    # Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v2

    # Deploy to your production server or cloud provider (e.g., AWS, DigitalOcean)
    - name: Deploy to Server (Example)
      run: |
        # Use SSH or other deployment methods to deploy your Docker container to the server.
        # Example command to deploy a Docker container (replace with your actual deployment process):
        ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@$${{ secrets.DEPLOY_SERVER }} "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/realtime-chat-backend:${{ github.sha }} && docker run -d -p 3001:3001 ${{ secrets.DOCKERHUB_USERNAME }}/realtime-chat-backend:${{ github.sha }}"